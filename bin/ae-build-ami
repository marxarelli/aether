#!/bin/sh
#
# Builds an AMI from within a running instance.
#

lib_path="$(dirname $0)/../lib/aether"

. $lib_path/metadata

access_key=$(cat /mnt/access.key)
secret_key=$(cat /mnt/secret.key)

ami_name="$1"

if [[ "x$ami_name" != "x" ]]; then
  ami_bucket=${2:-ami-bin}
else
  # get the manifest of the current instance
  echo "Getting manifest..."
  manifest=$(instance_metadata ami-manifest-path)

  ami_bucket=$(dirname $manifest)
  ami_name=$(basename $manifest .manifest.xml)
  ami_name="${ami_name%-r[0-9]*}"
fi

# get the latest revision of a registered images with this name
echo "Getting the latest revision of this image..."
ami_latest=$(ec2-describe-images -O "$access_key" -W "$secret_key" -o self \
  | gawk '$1 == "IMAGE" { print $3 }' \
  | gawk 'match($NF, /^\(?'$ami_bucket'\/'$ami_name'-r([0-9]+)\./, m) { print m[1]"\t"$NF }' \
  | sort -rnk 1 | head -n 1 | awk -F"\t" '{ print $2 }')

# get the revision from the name (e.g. oll-database-master-r2 is 2)
revision=$(echo "$ami_latest" | sed 's/.*-r\([0-9]*\)\.manifest\.xml/\1/')

# increment to the next revision
let "revision += 1"

ami_name="$ami_name-r$revision"

# unmount any mounted EBS filesystems
echo "Unmounting EBS/NFS filesystems..."
mounts=(
  $(awk '$1 ~ /^\/dev\/(sd[c-z]|md[0-9])/ { print $2 }' /etc/mtab)
  $(awk '$3 ~ /^nfs4?$/ { print $2 }' /etc/mtab)
)
for point in ${mounts[@]}; do
  echo $point
  umount $point || exit $?
done

arch="$(uname -m)"

# ix86 architectures should be i386
if [[ "x${arch%%i[3-9]86}" == "x" ]]; then
  arch=i386
fi

# build image from current volume
echo "Building $ami_name..."
ec2-bundle-vol -d /mnt \
  -k /mnt/ami-root.pem \
  -c /mnt/cert.pem \
  -u 5577-7815-3797 -r $arch -p $ami_name || exit $?

ec2-upload-bundle -b $ami_bucket \
  -m /mnt/$ami_name.manifest.xml \
  -a $access_key -s $secret_key --location US || exit $?

# remount EBS filesystems
echo "Re-mounting EBS/NFS filesystems..."
for point in ${mounts[@]}; do
  echo $point
  mount $point
done

# register AMI
echo "Registering image... "
ec2-register "$ami_bucket/$ami_name.manifest.xml" -O "$access_key" -W "$secret_key"
